################### FEATURES #################
<< scale VehicleGui

<< implement all ModuleBuilder
- DONE

<< implement artefacts
- DONE

<< make mass calc individual depending on in coming out coming item
- DONE

<< item, make additional single flag which merge states of is_damaged = false, lock_turns = 0;
- DONE

<< grabEquipment remove maxNumGrabItems, use strenght for that purpos
- DONE

<< grab vehicle

<< precise fire
- DONE

<< korpus descriptor

<< ability to hack ship

<< save/load ai/quest/scenario stuff

<< player radar range in RadarGui
- DONE

<< blackholes improovement (fluctuation movement, save/load ability)
- DONE

<< exploration ai scenario.
- DONE

<< base TradeGoods scenario
- DONE

<< sattelite and spacestation add fireevent
- DONE

<< add fading animation jump IN/-OUT
- DONE

<< player UNDO grab
- DONE

<< add fading animation for docking/launching
- DONE

<< ablitiy to resize the Gui depending on screen resolution.
- NOT RELEVANT

<< Space Gui, all controls are accesible by mouse only(shortkeys as additional way to control)
- NOT RELEVANT

<< BaseButton and different buttons (one pos, two pos) 
- DONE

<< weapons activation icons
- DONE

<< load/save icons
- DONE

<< gui scroll bar implementation
- DONE

<< ability to trade in store (different goods)
- DONE

<< re-implementation of the PathCalculation
- DONE

<< gui radar implementation
- DONE
##########################################


#################### BUGS ###################
#2
textureOb, updateAnimationFrame()
current implementation is: one textureOb is shared between many objects, so if the objects has the same texture then animation speed will be rised proportionally, which is not correct. 
- NOT RELEVANT

#4 turrels needs update after save/load event
- NOT RELEVANT, dissapear after first update()

#5 after several HJ, update for player is going to fast 

#6 bug with SetStaticCoords near to ship

#7 bug in
void RocketBullet::ResolveDataUniqueRocketBullet()
{                       
        if (unresolved_target_id != NONE_ID)
        {
        	//target = (BaseGameEntity*)EntityManager::Instance().GetEntityById(unresolved_target_id);

#8
#0  0x0000000004a87900 in ?? ()
#1  0x00000000004f7c69 in EntityManager::SaveEvent() ()
#2  0x00000000004cd5d6 in SaveLoadManager::Update(Player*) ()
#3  0x000000000054e258 in main ()

#segfault when player died
